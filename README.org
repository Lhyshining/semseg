* Introduction
** Repos Refered
- BVLC/caffe: https://github.com/BVLC/caffe.git
- SegNet-Tutorial: https://github.com/alexgkendall/SegNet-Tutorial.git
Rename to _SegNet_
- alexgkendall/caffe-segnet:  https://github.com/alexgkendall/caffe-segnet.git
This version supports cudnn v2 acceleration. 
Therefore, it is not used here.
- vgg-caffe: https://github.com/davidgengenbach/vgg-caffe.git
- caffe-segnet-cudnn5: https://github.com/TimoSaemann/caffe-segnet-cudnn5.git
  Located in SegNet/caffe-segnet
** System Environment
*** Linux ubuntu 16.04
#+begin_src bash
$ uname -a
Linux yubao-Z370M-S01 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
#+end_src
*** Cuda
10.0
*** cuDNN
v7.6.1+cuda 10.0
*** Python
2.7
** External Files
*** Weights
- VGG 16-layer mode: http://www.robots.ox.ac.uk/~vgg/research/very_deep/
** Python pacages
Refer SegNet/requirements.txt
** Reference
- Segnet tutorial: http://mi.eng.cam.ac.uk/projects/segnet/tutorial.html
- Install caffe:  [[http://caffe.berkeleyvision.org/installation.html][Caffe-Installation Guide]]
- Install cuDNN: [[https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#installlinux][Installing cuDNN on Linux]]
- Download pretrained model: https://github.com/alexgkendall/SegNet-Tutorial/blob/master/Example_Models/segnet_model_zoo.md
* Build caffe
** Dependences
*** CUDA
library version 7+ and the latest driver version are recommended, but 6.* is fine too
5.5, and 5.0 are compatible but considered legacy

Check current cuda version:
#+begin_src 
nvidia-smi
#+end_src
*** cuDNN
- cuDNN for GPU acceleration (v6)
- download: https://developer.nvidia.com/rdp/cudnn-download
 - Download cuDNN v7.6.1 (June 24, 2019), for CUDA 10.1
 - Download cuDNN v7.6.1 (June 24, 2019), for CUDA 10.0
 - Download cuDNN v7.6.1 (June 24, 2019), for CUDA 9.2
 - Download cuDNN v7.6.1 (June 24, 2019), for CUDA 9.0
#+begin_src bash
# cuDNN Runtime Library for Ubuntu16.04 (Deb)
wget -c https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v7.6.1.34/prod/10.0_20190620/Ubuntu16_04-x64/libcudnn7_7.6.1.34-1%2Bcuda10.0_amd64.deb
# cuDNN Developer Library for Ubuntu16.04 (Deb)
wget -c 
https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v7.6.1.34/prod/10.0_20190620/Ubuntu16_04-x64/libcudnn7-dev_7.6.1.34-1%2Bcuda10.0_amd64.deb
# cuDNN Code Samples and User Guide for Ubuntu16.04 (Deb)
https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v7.6.1.34/prod/10.0_20190620/Ubuntu16_04-x64/libcudnn7-doc_7.6.1.34-1%2Bcuda10.0_amd64.deb
#+end_src
- Remove previous version
#+begin_src bash
sudo dpkg -r libcudnn7 libcudnn7-dev
#+end_src
- Install using dpkg
#+begin_src bash
sudo dpkg -i <new-cudnn-runtime>.deb
sudo dpkg -i <new-cudnn-dev>.deb
sudo ldconfig
#+end_src

My cuda version is 10.0 so I should install v7.61 for CUDA 10.0
-  avoid auto upgrade when run /apt upgrade/ [very important]
#+begin_src bash
sudo apt-mark hold libcudnn7 libcudnn7-dev
#+end_src

I'm using version 7 + cuda 10
Check current cudnn version
#+begin_src bash
$ cat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
#define CUDNN_MAJOR 7
#+end_src
** compile caffe and install
#+begin_src 
cd caffe
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=<INSTALL_PATH> ..
make all
make install
make runtest
#+end_src
** Config python path
#+begin_src bash
export PYTHONPATH=<CAFFE_PATH>/python:$PYTHONPATH
#+end_src
** Install caffe using conda
I have not yet tried this method
Create 'caffe' virtual environment
#+begin_src bash
conda create -n caffe_gpu -c defaults python=3.6 caffe-gpu
#+end_src
** Test python caffe
#+begin_src bash
$ python
Python 2.7.12 (default, Nov 12 2018, 14:36:49)
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import caffe
>>> exit()
#+end_src
* SegNet: SegNet-Tutorial
Official: [[https://github.com/alexgkendall/SegNet-Tutorial][SegNet-Tutorial]]
** Structure
#+begin_src bash
$ tree -L 1
├── caffe-segnet
├── CamVid
├── docker
├── Example_Models
├── Models
├── README.md
├── requirement.txt
└── Scripts
#+end_src
** Getting Started with Live Demo
First open Scripts/webcam_demo.py and edit line 14 to match the path to your installation of SegNet. 

#+begin_src bash
python Scripts/webcam_demo.py --model Example_Models/segnet_model_driving_webdemo.prototxt --weights /Example_Models/segnet_weights_driving_webdemo.caffemodel --colours /Scripts/camvid12.png
#+end_src

* Setting Up Caffe and the Dataset
Modify path of 
- CamVid/test.txt
- CamVid/train.txt

vim:
#+begin_src  bash
:%s#SegNet#home/yubao/data/Project/semseg/SegNet-Tutorial-alexgkendall#g
#+end_src

1. Modify file path in:
 - Models/segnet_train.prototxt
#+begin_src bash
   7   dense_image_data_param {
   8     source: "/home/yubao/Project/semseg/SegNet-Tutorial-alexgkendall/CamVid/train.txt"  # Change this to the absolute      path to your data file
   9     batch_size: 4               # Change this number to a batch size that will fit on your GPU
#+end_src
 - Models/segnet_inference.prototxt
 - Models/segnet_solver.prototxt

1. Create a folder to store your training weights and solver details with mkdir /SegNet/Models/Training

* SegNet
** Training CamVid using SegNet-basic 
*** Dataset 
CamVid dataset contains 367 training and 233 testing images of road scenes. 
*** Training
#+begin_src bash
./SegNet/caffe-segnet/build/tools/caffe train -gpu 0 -solver /SegNet/Models/segnet_solver.prototxt  # This will begin training SegNet on GPU 0
./SegNet/caffe-segnet/build/tools/caffe train -gpu 0 -solver ./SegNet/Models/segnet_basic_solver.prototxt  # This will begin training SegNet-Basic on GPU 0
./SegNet/caffe-segnet/build/tools/caffe train -gpu 0 -solver ./SegNet/Models/segnet_solver.prototxt -weights /SegNet/Models/VGG_ILSVRC_16_layers.caffemodel  # This will begin training SegNet on GPU 0 with a pretrained encoder
#+end_src
*** Testing
#+begin_src bash
python /Segnet/Scripts/compute_bn_statistics.py /SegNet/Models/segnet_train.prototxt /SegNet/Models/Training/segnet_iter_10000.caffemodel /Segnet/Models/Inference/  # compute BN statistics for SegNet
python /Segnet/Scripts/compute_bn_statistics.py /SegNet/Models/segnet_basic_train.prototxt /SegNet/Models/Training/segnet_basic_iter_10000.caffemodel /Segnet/Models/Inference/  # compute BN statistics for SegNet-Basic
#+end_src
*** Result of basics
#+DOWNLOADED: file://./img/CamVid/test_1.png @ 2019-06-30 15:28:30
#+attr_html: :width 320px
#+attr_latex: :width 320cm
#+attr_org: :width 320px
[[file:images/SegNet/test_1_2019-06-30_15-28-30.png]]


#+DOWNLOADED: file://./img/CamVid/test_1_res1.png @ 2019-06-30 15:29:14
#+attr_html: :width 320px
#+attr_latex: :width 320cm
#+attr_org: :width 320px
[[file:images/SegNet/test_1_res1_2019-06-30_15-29-14.png]]

#+DOWNLOADED: file://img/CamVid/test_1_res2.png @ 2019-06-30 15:29:18
#+attr_html: :width 320px
#+attr_latex: :width 320cm
#+attr_org: :width 320px
[[file:images/SegNet/test_1_res2_2019-06-30_15-29-18.png]]

** Training Pascal VOC
*** Dataset
Pascal VOC
*** Training

*** Testing

* Possible Errors
** ImportError: No module named caffe
#+begin_src bash
t$ python Scripts/compute_bn_statistics.py Example_Models/segnet_pascal.prototxt Example_Models/segnet_pascal.caffemodel Models/Inference/
Traceback (most recent call last):
  File "Scripts/compute_bn_statistics.py", line 14, in <module>
    import caffe
ImportError: No module named caffe
#+end_src
Solution:
#+begin_src bash
export PYTHONPATH=<CAFFE_PATH>/python:$PYTHONPATH
eg:
 export PYTHONPATH=/home/yubao/data/Project/semseg/SegNet/caffe-segnet/python:$PYTHONPATH
#+end_src
If still not work, check relative files.
For example: 

Scripts/compute_bn_statistics.py

#+begin_src bash
 9
 10 caffe_root = '/home/yubao/data/Project/semseg/SegNet/caffe-segnet/build/install'          # Change this to the absolute     directory to SegNet Caffe
#+end_src
** Cudnn error when compile /caffe-segnet-cudnn5/
Error message:
#+begin_src bash
(caffe_gpu) yubao@yubao-Z370M-S01:~/data/Project/semseg/caffe-segnet-cudnn5-TimoSaemann/build$ make
Scanning dependencies of target proto
[  0%] Building CXX object src/caffe/CMakeFiles/proto.dir/__/__/include/caffe/proto/caffe.pb.cc.o
[  0%] Linking CXX static library ../../lib/libproto.a
[  1%] Built target proto
[  1%] Building NVCC (Device) object src/caffe/CMakeFiles/cuda_compile_1.dir/layers/cuda_compile_1_generated_absval_layer.cu.o
/home/yubao/data/Project/semseg/caffe-segnet-cudnn5-TimoSaemann/include/caffe/util/cudnn.hpp(112): error: too few arguments in function call

1 error detected in the compilation of "/tmp/tmpxft_000074ef_00000000-4_absval_layer.cpp4.ii".
CMake Error at cuda_compile_1_generated_absval_layer.cu.o.Release.cmake:279 (message):
  Error generating file
  /home/yubao/data/Project/semseg/caffe-segnet-cudnn5-TimoSaemann/build/src/caffe/CMakeFiles/cuda_compile_1.dir/layers/./cuda_compile_1_generated_absval_layer.cu.o


src/caffe/CMakeFiles/caffe.dir/build.make:499: recipe for target 'src/caffe/CMakeFiles/cuda_compile_1.dir/layers/cuda_compile_1_generated_absval_layer.cu.o' failed
make[2]: *** [src/caffe/CMakeFiles/cuda_compile_1.dir/layers/cuda_compile_1_generated_absval_layer.cu.o] Error 1
CMakeFiles/Makefile2:271: recipe for target 'src/caffe/CMakeFiles/caffe.dir/all' failed
make[1]: *** [src/caffe/CMakeFiles/caffe.dir/all] Error 2
Makefile:129: recipe for target 'all' failed
make: *** [all] Error 2

#+end_src
Solution:

It's happening due to cudnn.hpp (Location: include/caffe/util/cudnn.hpp) . Update cudnn.hpp file. It is not considering the current cuDNN versions.

Update the cudnn.hpp from github repo, BVLC/caffe/include/caffe/util/cudnn.hpp
Or, go to this link https://github.com/BVLC/caffe/blob/master/include/caffe/util/cudnn.hpp [Copy this and replace the old one]

-  Python Caffe: Python 2.7 or Python 3.3+, numpy (>= 1.7), boost-provided boost.python
- MATLAB Caffe: MATLAB with the mex compiler
** cudnn error when testing neuron network
#+begin_src bash
yubao@yubao-Z370M-S01:~/data/Project/semseg/caffe$ ./build/examples/cpp_classification/classification.bin ./models/bvlc_reference_caffenet/deploy.prototxt ./models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel ./data/ilsvrc12/imagenet_mean.binaryproto ./data/ilsvrc12/synset_words.txt ./examples/images/cat.jpg
F0630 09:11:41.399860 17359 cudnn_conv_layer.cpp:53] Check failed: status == CUDNN_STATUS_SUCCESS (1 vs. 0)  CUDNN_STATUS_NOT_INITIALIZED
Check failure stack trace: ***
    @     0x7fdf7114346d  google::LogMessage::Fail()
    @     0x7fdf71145a23  google::LogMessage::SendToLog()
    @     0x7fdf71142ffb  google::LogMessage::Flush()
    @     0x7fdf7114496e  google::LogMessageFatal::~LogMessageFatal()
    @     0x7fdf7170c0db  caffe::CuDNNConvolutionLayer<>::LayerSetUp()
    @     0x7fdf718293dc  caffe::Net<>::Init()
    @     0x7fdf7182c4a0  caffe::Net<>::Net()
    @           0x4085bb  Classifier::Classifier()
    @           0x4048c3  main
    @     0x7fdf6c775830  __libc_start_main
    @           0x405129  _start
Aborted (core dumped)

#+end_src

Solution:
1. Check my cuda version via /nvidia-smi/
cuda 10.0
1. Check /cudnn/ version
#+begin_src bash
yubao@yubao-Z370M-S01:~/data/Project/semseg/caffe$ dpkg -l | grep cuda |grep dnn
ii  libcudnn7                                                7.6.0.64-1+cuda10.1                                   amd64        cuDNN runtime libraries
ii  libcudnn7-dev                                            7.6.0.64-1+cuda10.1                                   amd64        cuDNN development libraries and headers
#+end_src

It looks like their version is inconsistent.

It is caused by /apt-get upgrade/

You can use
#+begin_src bash
sudo apt-mark hold libcudnn7 libcudnn7-dev
#+end_src
to avoid auto upgrade.

1. remove current cudnn
My cudnn directory is here:
/usr/lib/x86_64-linux-gnu/libcudnn.so

Remov all related libs
#+begin_src bash
sudo dpkg -r libcudnn7 libcudnn7-dev
#+end_src

1. Install cuDNN again whith correct version
1. Finually succeed:
 #+begin_src bash
yubao@yubao-Z370M-S01:~/data/Project/semseg/caffe$ ./build/examples/cpp_classification/classification.bin ./models/bvlc_reference_caffenet/deploy.prototxt ./models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel ./data/ilsvrc12/imagenet_mean.binaryproto ./data/ilsvrc12/synset_words.txt ./examples/images/cat.jpg
---------- Prediction for ./examples/images/cat.jpg ----------
0.3134 - "n02123045 tabby, tabby cat"
0.2380 - "n02123159 tiger cat"
0.1235 - "n02124075 Egyptian cat"
0.1003 - "n02119022 red fox, Vulpes vulpes"
0.0715 - "n02127052 lynx, catamount"
#+end_src
1. Reference: http://nhoj62003.blogspot.com/2017/10/caffe.html
